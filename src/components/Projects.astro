---
import GitHub from "./icons/GitHub.astro"
import NextJS from "./icons/NextJS.astro"
import Tailwind from "./icons/Tailwind.astro"
import Html from "./icons/Html.astro"
import Css from "./icons/Css.astro"
import Javascript from "./icons/Javascript.astro"
import Express from "./icons/ExpressJS.astro"
import Node from "./icons/NodeJS.astro"
import Mysql from "./icons/MySQL.astro"
import Vite from "./icons/Vite.astro"
import React from "./icons/React.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"

const TAGS = {
  HTML: {
    name: "HTML",
    class: "bg-white border  text-black",
    icon: Html,
  },
  CSS: {
    name: "CSS",
    class: "bg-white border text-black",
    icon: Css,
  },
  javascript:{
    name: "Javascript",
    class: "bg-white text-black",
    icon: Javascript,
  },
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  EXPRESS: {
    name: "Express",
    class: "bg-white text-black border",
    icon: Express,
  },
  MYSQL: {
    name: "Mysql",
    class: "bg-white border text-black",
    icon: Mysql,
  },
  NODE: {
    name: "Node.js",
    class: "bg-[#003159] text-white",
    icon: Node,
  },
  VITE: {
    name: "Vite",
    class: "bg-[#646cff] text-white",
    icon: Vite,
  },
  REACT: {
    name: "React",
    class: "bg-white text-black border",
    icon: React,
  }


}
const PROJECTS = [
  {
    title: "Flashcard App",
    description:
      "Flashcards App es un proyecto personal desarrollado como un reto para aprender y aplicar conceptos avanzados de desarrollo web. Inspirada en herramientas como Anki, esta aplicación combina algoritmos de repetición espaciada para mejorar el aprendizaje.",
    link: "https://flashcard-re.netlify.app/",
    github: "https://github.com/kaizendev26/flashcards-app",
    image: "/public/projects/screenshot-flashcardapp-02.webp",
    tags: [TAGS.HTML,TAGS.CSS,TAGS.TAILWIND,TAGS.VITE],
    status: "complete"
  },
  {
    title: "API REST - Flashcard App",
    description:
      "API REST para gestionar el aprendizaje mediante la repetición espaciada inspirada en Anki",
    github: "https://github.com/kaizendev26/api.flashcards-app",
    image: "/public/projects/api.flashcardapp-01.webp",
    tags: [TAGS.NODE,TAGS.EXPRESS,TAGS.MYSQL],
    status: "complete"
  },
  {
    title: "Gestion de reposteria",
    description:
      "Aplicación integral para la gestión de negocios de repostería, diseñada para crear recetas, calcular costos y establecer precios de venta de manera precisa y eficiente",
    // github: "https://github.com/kaizendev26/api.flashcards-app",
    image: "/public/projects/reposteria.webp",
    tags: [TAGS.REACT, TAGS.NODE, TAGS.EXPRESS, TAGS.MYSQL],
    status: "in progress"
  },
]
---

<div class="flex flex-col gap-y-16 mt-6">
  {
    PROJECTS.map(({ image, title, description, tags, link, github,status }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      {
        status == "in progress" ? (
        <span class="absolute z-10 top-2 left-2 bg-yellow-500 text-white text-xs font-semibold px-2 py-1 rounded-full">
          En desarrollo
        </span>
        )
        : (
          ""
        )
      }
      <img alt="" class={`object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105`} loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Code
              
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link}>
              <Link class="size-4" />
              Preview
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>



